services:
  dbase-service:
    image: postgres:17.2
    container_name: dbase-service
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${PROD_POSTGRES_DB_NAME}
      POSTGRES_HOST: dbase-service
    ports:
      - "${PROD_POSTGRES_DB_PORT}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${PROD_POSTGRES_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./DockerVolumes/pg_data:/var/lib/postgresql/data

  calc:
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: calc
    volumes:
      - ./:/LJV.HA
    entrypoint: ./entrypoint.sh
    ports:
      - ${APP_PORT}:8000
    depends_on:
      dbase-service:
        condition: service_healthy

  test-db-service:
    image: postgres:17.2
    container_name: test-db-service
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${TEST_POSTGRES_DB_NAME}
    ports:
      - "${TEST_POSTGRES_DB_PORT}:5432"
    healthcheck:
      test: [
        "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${TEST_POSTGRES_DB_NAME}"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./DockerVolumes/DB_for_tst:/var/lib/postgresql/data